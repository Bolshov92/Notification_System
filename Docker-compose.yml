version: '3.8'

services:
  contact-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: contacts_db
      MYSQL_USER: contact_user
      MYSQL_PASSWORD: ${CONTACT_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3307:3306"
    volumes:
      - contact-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  event-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: events_db
      MYSQL_USER: event_user
      MYSQL_PASSWORD: ${EVENT_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3308:3306"
    volumes:
      - event-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  file-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: files_db
      MYSQL_USER: file_user
      MYSQL_PASSWORD: ${FILE_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3309:3306"
    volumes:
      - file-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  notification-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: notification_user
      MYSQL_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3310:3306"
    volumes:
      - notification-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  sms-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: sms_db
      MYSQL_USER: sms_user
      MYSQL_PASSWORD: ${SMS_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3311:3306"
    volumes:
      - sms-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  user-db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: users_db
      MYSQL_USER: user_user
      MYSQL_PASSWORD: ${USER_DB_PASSWORD}
      TZ: Europe/London
    ports:
      - "3312:3306"
    volumes:
      - user-db-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  contact-service:
    build:
      context: ./contact-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://contact-db:3306/contacts_db
      SPRING_DATASOURCE_USERNAME: contact_user
      SPRING_DATASOURCE_PASSWORD: ${CONTACT_DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TZ: Europe/London
    ports:
      - "8081:8080"
    depends_on:
      contact-db:
        condition: service_healthy
    restart: unless-stopped

  event-service:
    build:
      context: ./event-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://event-db:3306/events_db
      SPRING_DATASOURCE_USERNAME: event_user
      SPRING_DATASOURCE_PASSWORD: ${EVENT_DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TZ: Europe/London
    ports:
      - "8082:8080"
    depends_on:
      event-db:
        condition: service_healthy
    restart: unless-stopped

  file-service:
    build:
      context: ./file-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://file-db:3306/files_db
      SPRING_DATASOURCE_USERNAME: file_user
      SPRING_DATASOURCE_PASSWORD: ${FILE_DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TZ: Europe/London
    ports:
      - "8083:8080"
    depends_on:
      file-db:
        condition: service_healthy
    restart: unless-stopped

  notification-service:
    build:
      context: ./notification-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://notification-db:3306/notifications_db
      SPRING_DATASOURCE_USERNAME: notification_user
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TZ: Europe/London
    ports:
      - "8087:8080"
    depends_on:
      notification-db:
        condition: service_healthy
    restart: unless-stopped

  sms-service:
    build:
      context: ./sms-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://sms-db:3306/sms_db
      SPRING_DATASOURCE_USERNAME: sms_user
      SPRING_DATASOURCE_PASSWORD: ${SMS_DB_PASSWORD}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TZ: Europe/London
    ports:
      - "8085:8080"
    depends_on:
      sms-db:
        condition: service_healthy
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://user-db:3306/users_db
      SPRING_DATASOURCE_USERNAME: user_user
      SPRING_DATASOURCE_PASSWORD: ${USER_DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: ${JWT_SECRET}
      TZ: Europe/London
    ports:
      - "8086:8080"
    depends_on:
      user-db:
        condition: service_healthy
    restart: unless-stopped

  zookeeper:
    image: zookeeper:3.6.3
    ports:
      - "2181:2181"
    environment:
      TZ: Europe/London
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      TZ: Europe/London
    depends_on:
      - zookeeper
    restart: unless-stopped

volumes:
  contact-db-data:
  event-db-data:
  file-db-data:
  notification-db-data:
  sms-db-data:
  user-db-data:
