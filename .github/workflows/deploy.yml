name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      CONTACT_DB_PASSWORD: ${{ secrets.CONTACT_DB_PASSWORD }}
      EVENT_DB_PASSWORD: ${{ secrets.EVENT_DB_PASSWORD }}
      FILE_DB_PASSWORD: ${{ secrets.FILE_DB_PASSWORD }}
      NOTIFICATION_DB_PASSWORD: ${{ secrets.NOTIFICATION_DB_PASSWORD }}
      SMS_DB_PASSWORD: ${{ secrets.SMS_DB_PASSWORD }}
      USER_DB_PASSWORD: ${{ secrets.USER_DB_PASSWORD }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      RAILWAY_PROJECT_TOKEN: ${{ secrets.RAILWAY_PROJECT_ID}}
      RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker images
        run: |
          docker build -t bolshov92/contact-service ./contact-service
          docker build -t bolshov92/event-service ./event-service
          docker build -t bolshov92/file-service ./file-service
          docker build -t bolshov92/notification-service ./notification-service
          docker build -t bolshov92/sms-service ./sms-service
          docker build -t bolshov92/user-service ./user-service

      - name: Push Docker images
        run: |
          docker push bolshov92/contact-service
          docker push bolshov92/event-service
          docker push bolshov92/file-service
          docker push bolshov92/notification-service
          docker push bolshov92/sms-service
          docker push bolshov92/user-service

      #      - name: Deploy with Docker Compose
      #        run: docker compose -f ./Docker-compose.yml up -d
      - name: Install Railway CLI
        run: |
          curl -sSL https://railway.app/install.sh | sh

      - name: Log in to Railway
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        run: echo "export RAILWAY_TOKEN=${{ secrets.RAILWAY_API_TOKEN }}" >> $GITHUB_ENV

      - name: Link Railway project
        run: |
               echo "${{ secrets.RAILWAY_PROJECT_ID }}" > railway_project_id.txt
               railway link < railway_project_id.txt

      - name: Deploy to Railway
        run: railway up
